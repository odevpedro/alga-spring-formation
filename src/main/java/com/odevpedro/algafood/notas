Que problema o JPA resolve?
Para entendermos como funciona o JPA e saber que problemas ele se prop√¥s a resolver na sua cria√ß√£o √© interessante darmos um passo para tr√°s e olharmos com calma para o JDBC. O JDBC √© basicamente um conjunto de classes e interfaces que nos permitem o envio de instru√ß√µes SQL a qualquer banco de dados relacional. Uma defini√ß√£o mais formal seria:

API baseada em interfaces, representada pelo pacote java.sql.* que nos permite fazer comunica√ß√£o com o banco de dados. O jdbc √© uma abstra√ß√£o entre as aplica√ß√µes java e os drives de conex√£o com os bancos de dados. A interface Connection nos permite passar as informa√ß√µes de conex√£o com o banco de dados. O jdbc redireciona da forma mais adequada os comandos para os drives



PERGUNTAS

O que √© persist√™ncia de dados?
Termo utilizado para dizermos que queremos preservar os dados por um tempo al√©m da utiliza√ß√£o do software.

persistencia de dados com java consciste na intermedia√ß√£o que o jdbc faz com o sql

 O jdbc n√£o oferece a op√ß√£o a ORM, Fazer o mapeamento, convers√£o do objeto relacional √© o que nos faz gastar tempo.

 depara entre a composi√ß√£o de um objeto com uma tabela no banco de dados
Na pr√°tica √© uma automatiza√ß√£o dos processos referentes a integra√ß√£o com o banco de dados. Ou seja: todo aquele processo √°rduo feito no JDBC √© abstra√≠do de forma simples pelo JPA

Atrav√©s do JDBC toda a responsabilidade de comunica√ß√£o com o banco de dados fica a cargo do Data Acess Object (DAO) ‚Äî sendo um padr√£o de projeto java.
utilidades:

- fazer esse mapeamento objeto relacional






üóÉÔ∏è Persistence.xml ‚Üí Unidade de persist√™ncia. O JPA √© configurado a partir das especifica√ß√µes contidas nesse arquivo. ‚Üí Configura√ß√£o de acesso ao banc





Exemplo de c√≥digo em JDBC e a compara√ß√£o com o JPA:



package br.com.alura.jdbc.modelo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class ContaDao {
	private Connection cnn;

	public ContaDao() {
		try {
			this.cnn = DriverManager.getConnection("mysql://localhost/alura_jdbc", "root", "");
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public void adiciona(Conta conta) {
		try {
			String sql = "insert into conta(agencia, numero, titular) values (?,?,?)";
			PreparedStatement ps = cnn.prepareStatement(sql);
			//As tr·∫Ωs linhas abaixos inserem os valores
			ps.setLong(1, conta.getAgencia());
			ps.setLong(2, conta.getNumero());
			ps.setString(3, conta.getTitular());

			ps.execute();
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
}




Antes do jdbc a conex√£o feita atrav√©s de sockets de forma manual.
O jdbc √© a t√©cnologia padr√£o do java fazer acesso a BD relacionais.
O jdbc veio como uma camada de abstra√ß√£o para que fosse acessada independente do DB e protocolo.


√â necess√°rio um drive do Banco de dados que √© um jar. Para cada banco de dados temos um driver. O driver permite
essa comunica√ß√£o √© uma interface que atrav√©s da tradu√ß√£o de protocolos passando do java para o sgbd
Mas o c√≥digo que faz a comunica√ß√£o continua o mesmo.